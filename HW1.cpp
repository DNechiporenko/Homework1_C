#include <iostream>
#include <math.h>
using namespace std;
//Домашнее задание выполнили студенты 22БИ3: Нечипоренко Дарья, Корнеев Никита, Блинков Петр.

//Функция к заданию 1 (Вычислить площадь трапеции с основаниями b1 и b2 и высотой h)
float Sqtr (float b1, float b2, float h) {
	return (b1 + b2) * h / 2;
}
//Функции к заданию 2 (Вычислить длину окружности и площадь круга радиуса г)
float DlinaOkr(float R) {
	return 2*3.14*R; //Вычисляем длину окружности радиуса r
}

double PloshOkr(float R) {
	return 3.14*R*R; //Вычисляем площадь круга радиуса r
}

//Функции к заданию 3 (Вычислить площадь прямоугольного треугольника и гипотенузу)

int GPT(int a, int b) {
	return sqrt(a * a + b * b);
}

int SqPT(int a, int b) {
	return a * b / 2;
}

//Функция к заданию 4 (Дано десятичное четырехзначное число. Найти сумму его цифр)

int SumChisel(int a) {
	int sum = 0;
	while (a >= 10) { // В данном цикле мы четырехзначное число разбиваем на цифры и суммируем их.
		sum += a % 10;
		a /= 10;
	}
	sum += a;
	return sum;
}

//Функция к заданию 5 (Выполнить переход от декартовых координат к полярным)
void cartesianToPolar() {
	double x, y, r, theta; // Объявляем переменные с плавающей точкой
	cout << "Введите координату х: ";
	cin >> x;
	cout << "Введите координату y: ";
	cin >> y;
	r = sqrt(x * x + y * y); //Формула для перевода
	theta = atan2(y, x); //Формула для перевода
	cout << "Полярные координаты: r = " << r << ", theta = " << theta << endl;
}

// Функция к заданию 6 (Выполнить переход от полярных координат к декартовым)
void polarToCartesian() {
	double r, theta, x, y; // Объявляем переменные с плавающей точкой
	cout << "Введите значение r: ";
	cin >> r;
	cout << "Введите значение theta (в радианах): ";
	cin >> theta;
	x = r * cos(theta); //Формула для перевода
	y = r * sin(theta); //Формула для перевода
	cout << "Декартовые координаты: x = " << x << ", y = " << y << endl;
}

//Функция к заданию 7 (Найти корни квадратного уравнения)
void Task7() {
	double a, b, c, d, x1, x2; // Объявляем переменные с плавающей точкой

	cout << "Введите a\n"; // Вводим исходные данные (коэффициенты в квадратном уравнении)
	cin >> a;
	cout << "Введите b\n";
	cin >> b;
	cout << "Введите c\n";
	cin >> c;

	d = b * b - 4 * a * c; // Рассчитываем дискриминант
	if (d > 0) // Условие при дискриминанте больше нуля
	{
		x1 = ((-b) + sqrt(d)) / (2 * a);
		x2 = ((-b) - sqrt(d)) / (2 * a);
		cout << "x1 = " << x1 << "\n";
		cout << "x2 = " << x2 << "\n";
	}
	if (d == 0) // Условие для дискриминанта равного нулю
	{
		x1 = -(b / (2 * a));
		cout << "x1 = x2 = " << x1 << "\n";
	}
	if (d < 0) // Условие при дискриминанте меньше нуля
		cout << "D < 0, Действительных корней уравнения не существует";
}

//Функция к заданию 8 (Имеется треугольник со сторонами а, b, с. Найти медианы треугольника, сторонами которого являются медианы исходного треугольника)
void findMedians() {
	double a, b, c, ma, mb, mc; // Объявляем переменные с плавающей точкой
	cout << "Введите сторону a: ";
	cin >> a;
	cout << "Введите сторону b: ";
	cin >> b;
	cout << "Введите сторону c: ";
	cin >> c;

	ma = 0.5 * sqrt(2 * b * b + 2 * c * c - a * a); // Считем медиану стороны a
	mb = 0.5 * sqrt(2 * c * c + 2 * a * a - b * b); // Считем медиану стороны b
	mc = 0.5 * sqrt(2 * a * a + 2 * b * b - c * c); // Считем медиану стороны c
	cout << "Медианы нового треугольника: ma = " << ma << ", mb = " << mb << ", mc = " << mc << endl;

}

//Функция к заданию 9 (Идет k-я секунда суток. Определить, сколько целых часов и целых минут прошло с начала суток)
void secondsToHoursMinutes() {
	int hours, minutes, k;
	cout << "Введите количество секунд k: ";
	cin >> k;
	hours = k / 3600; // 1 час = 3600 секунд
	minutes = (k % 3600) / 60; // оставшиеся секунды, разделенные на 60, дают минуты
	cout << "Прошло часов: " << hours << ", минут: " << minutes << endl;
}

//Функция к заданию 10 (Определить, является ли треугольник со сторонами a, b, c равнобедренным)

void Task10() {
	int a, b, c = 0;
	cout << "Введите первую сторону треугольника: ";
	cin >> a;
	cout << "Введите вторую сторону треугольника: ";
	cin >> b;
	cout << "Введите третью сторону треугольника: ";
	cin >> c;

	if (a == b || b == c || a == c) { //Условие равнобедренности треугольника
		cout << "Треугольник с заданными сторонами является равнобедренным"; 
	}
	else {
		cout << "Треугольник с заданными сторонами не является равнобедренным";
	}
}


//Функция к заданию 11 (Вычислить стоимость покупки с учётом скидки.Скидка в 10 % предоставляется, если сумма покупки превышает 1000 рублей)
int PriceOfPurchase(int a) {
	if (a > 1000) { //Условие предоставления скидки
		a = a - 0.1 * a;

	}
	return a;
}

//Функция к заданию 12 (Дать рекомендации пользователю с известным ростом и весом похудеть или поправиться, если идеальный вес определяется формулой (рост - 100 = идеальный вес))
void Task12() {
	float rost, ves; 
	cout << "Введите Ваш рост: ";
	cin >> rost;
	cout << "Введиет Вас вес: ";
	cin >> ves;
	float idealves = rost - 100; //Формула идеального веса
	if (ves == idealves) {
		cout << "У вас идеальный вес" << endl;
	}
	if (ves > idealves) {
		cout << "Вам нужно похудеть" << endl;
	}
	if (ves < idealves) {
		cout << "Вам нужно поправиться" << endl;
	}
}
/*Функция к заданию 13 (Программа генерирует два случайных числа в диапазоне от 1 до 9.
Тестируемый вводит результат произведения этих чисел.Программа сообщает тестируемому ошибся он или нет)*/

void Task13() {
	int answer;
	srand(0); // для генерации рандомных чисел
	int randnum1 = rand() % 9 + 1; 
	int randnum2 = rand() % 9 + 1;
	cout << "Умножьте " << randnum1 << " на " << randnum2 << ": "; //Просим пользователя решить пример
	cin >> answer;

	//Далее проверяем правильность ответа

	if (answer == randnum1 * randnum2) {
		cout << "Правильно! Ответ верный" << endl;
	}
	else {
		cout << "Неправильно. Ответ: " << randnum1 * randnum2 << endl;
	}
}

//Функция к заданию 14 (Написать программу вычисления стоимости переговоров, если по субботам и воскресеньям предоставляется скидка 20 % .Ввести продолжительность разговора и день недели(число от 1 до 7).)

void calculateCallCost() {
	double duration;
	int dayOfWeek;

	cout << "Введите продолжительность разговора в минутах: ";
	cin >> duration;
	cout << "Введите день недели (число от 1 до 7, где 1 - понедельник, 2 - вторник, и т.д.): ";
	cin >> dayOfWeek;

	const double rate = 0.5; // Стоимость разговора в минуту

	// Проверка, является ли день недели субботой(6) или воскресеньем(7)
	if (dayOfWeek == 6 || dayOfWeek == 7) { 
		cout << "Стоимость переговоров: " << duration * rate * 0.8 << " (Тариф выходного дня)"; // Применение скидки 20%
	}
	else {
		cout << "Стоимость переговоров: " << duration * rate << " (Тариф буднего дня)";
	}
}

//Функция к заданию 15 (Ввести с клавиатуры номер месяца.Выдать сообщение о названии месяца и времени года)
int task15() {
	int n;
	cout << "Введиет номер месяца: ";
	cin >> n;
	//Смотрим информацию по номеру месяца 
	switch (n) { 
	case 12:
		cout << n << " месяц - декабрь. Время года-зима";
		break;
	case 1:
		cout << n << " месяц - январь. Время года-зима";
		break;
	case 2:
		cout << n << " месяц - февраль. Время года-зима";
		break;
	case 3:
		cout << n << " месяц - март. Время года-весна";
		break;
	case 4:
		cout << n << " месяц - апрель. Время года-весна";
		break;
	case 5:
		cout << n << " месяц - май. Время года-весна";
		break;
	case 6:
		cout << n << " месяц - июнь. Время года-лето";
		break;
	case 7:
		cout << n << " месяц - июль. Время года-лето";
		break;
	case 8:
		cout << n << " месяц - август.Время года-лето";
		break;
	case 9:
		cout << n << " месяц - сентябрь. Время года-осень";
		break;
	case 10:
		cout << n << " месяц - октябрь. Время года-осень";
		break;
	case 11:
		cout << n << " месяц - ноябрь. Время года-осень";
		break;
	}
	
	return n;
}

//Функция к заданию 16 ()
void Task16() {
	int i, a, b, c, d, e, f, x, y, count = 0;
	cout << "Введите шестизначное число: ";
	cin >> i;
	//a,b,c,d,e,f - цифры в шестизначном числе
	a = i / 100000;
	b = i / 10000 - a * 10;
	c = i / 1000 - a * 100 - b * 10;
	d = i / 100 - a * 1000 - b * 100 - c * 10;
	e = i / 10 - a * 10000 - b * 1000 - c * 100 - d * 10;
	f = i - a * 100000 - b * 10000 - c * 1000 - d * 100 - e * 10;

	x = a + b + c;
	y = d + e + f;

	if (x == y)
	{
		cout << "Число является счастливым";
	}
	else {
		cout << "Число не является счастливым";
	}
	
}



//Функция к заданию 17 (Написать программу, которая при вводе числа в диапазоне от 1 до 99 добавляет к нему слово "копейка" в правильной форме)

void Task17() {
	int num, a;
	cout << "Введите число в диапазоне от 1 до 99: ";
	cin >> num;
	a = num % 10; // Записываем в переменную "а" последнюю цифру от введенного числа
	cout << num;
	switch (a) { 
	case 0:
		cout << " копеек";
		break;
	case 1:
		cout << " копейка";
		break;
	case 2:
		cout << " копейки";
		break;
	case 3:
		cout << " копейки";
		break;
	case 4:
		cout << " копейки";
		break;
	case 5:
		cout << " копеек";
		break;
	case 6:
		cout << " копеек";
		break;
	case 7:
		cout << " копеек";
		break;
	case 8:
		cout << " копеек";
		break;
	case 9:
		cout << " копеек";
		break;
	}
} 

//Функция к заданию 18 (Дано натуральное четырехзначное число. Выяснить, является ли оно палиндромом)

void isPalindrome() {
	int number;
	cout << "Введите четырехзначное число:";
	cin >> number;
	// Получение цифр числа
	int digit1 = number / 1000;				// Первая цифра            
	int digit2 = (number / 100) % 10;		// Вторая цифра
	int digit3 = (number / 10) % 10;		// Третья цифра
	int digit4 = number % 10;				// Четвёртая цифра

	if (digit1 == digit4 && digit2 == digit3) {
		cout << "Число является палиндромом" << endl;
	}
	else {
		cout << "Число не является палиндромом" << endl;
	}

}

//Функция к заданию 19 (Дано трёхзначное число. Определить: 19.1 является ли произведение его цифр больше числа b 19.2 кратна ли 7 сумма его цифр)

void Task19() {
	int number,b;
	cout << "Введите трёхзначное число: ";
	cin >> number;
	cout << "Введите число b: ";
	cin >> b;

	// Получение цифр числа
	int digit1 = number / 100;     // Первая цифра
	int digit2 = (number / 10) % 10; // Вторая цифра
	int digit3 = number % 10;       // Третья цифра

	// 19.1: Является ли произведение цифр больше числа b
	int product = digit1 * digit2 * digit3;
	if (product > b) {
		cout << "Произведение цифр больше числа b" << endl;
	}
	else {
		cout << "Произведение цифр не больше числа b" << endl;
	}

	// 19.2: Кратна ли 7 сумма цифр
	int sum = digit1 + digit2 + digit3;
	if (sum % 7 == 0) {
		cout << "Сумма цифр кратна 7" << endl;
	}
	else {
		cout << "Сумма цифр не кратна 7" << endl;
	}
}

/*Функция к заданию 20 (Даны вещественные положительные числа a, b, c, d.Выяснить, можно ли прямоугольник со сторонами a, b поместить в прямоугольник со сторонами c, d
так, чтобы стороны одного прямоугольника были параллельны сторонам другого)*/

void canFitRectangle() {
	double a, b, c, d;
	cout << "Введите размеры прямоугольника a и b: ";
	cin >> a >> b;
	cout << "Введите размеры прямоугольника c и d: ";
	cin >> c >> d;
	if ((a <= c && b <= d) || (a <= d && b <= c)) {
		cout << "Прямоугольник можно поместить в другой." << endl;
	}
	else {
		cout << "Прямоугольник нельзя поместить в другой." << endl;
	}


}


int main () {
	setlocale(LC_ALL, "RU"); //для подключения русской раскладки
	//Задание 1
	cout << "Задание 1" << "\n";;
	cout << "Площадь трапеции равна: " << Sqtr(10, 20, 30) << endl;
	//Задание 2
	cout << "Задание 2" << endl;
	cout << "Длина окружности равна: " << DlinaOkr(10) << endl;
	cout << "Площадь окружности равна: " << PloshOkr(10) << endl;
	//Задание 3
	cout << "Задание 3" << endl;
	cout << "Гипотенуза прямоугольного треугольника равна: " << GPT(5,6) << endl;
	cout << "Площадь прямоугольного треугольника равна: " << SqPT(5, 6) << endl;
	//Задание 4
	cout << "Задание 4" << endl;
	cout << "Сумма чисел четырехзначного числа равна: " << SumChisel(1234) << endl;
	//Задание 5
	cout << "Задание 5" << endl;
	cartesianToPolar();
	//Задание 6
	cout << "Задание 6" << endl;
	polarToCartesian();
	//Задание 7
	cout << "Задание 7" << endl;
	Task7();
	cout << endl;
	//задание 8
	cout << "Задание 8" << endl;
	findMedians();
	//Задание 9
	cout << "Задание 9" << endl;
	secondsToHoursMinutes();
	//Задание 10
	cout << "Задание 10" << endl;
	Task10();
	cout << endl;
	//Задание 11
	cout << "Задание 11" << endl;
	cout << "Сумма покупки : " << PriceOfPurchase(1100) << endl;
	//Задание 12 
	cout << "Задание 12" << endl;
	Task12();
	//Задание 13
	cout << "Задание 13" << endl;
	Task13();
	cout << endl;
	//Задание 14
	cout << "Задание 14" << endl;
	calculateCallCost();
	cout << endl;
	//задание 15
	cout << "Задание 15" << endl;
	task15();
	cout << endl;
	//задание 16
	cout << "Задание 16" << endl;
	Task16();
	//задание 17
	cout << "\n" << "Задание 17" << endl;
	Task17();
	cout << endl;
	//Задание 18
	cout << "Задание 18" << endl;
	isPalindrome();
	cout << endl;
	//Задание 19
	cout << "Задание 19" << endl;
	Task19();
	cout << endl;
	//Задание 20
	cout << "Задание 20" << endl;
	canFitRectangle();
	cout << endl;
	return 0;
}



